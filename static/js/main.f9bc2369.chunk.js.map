{"version":3,"sources":["component/Select.js","component/Table/Table.js","component/Table/Filter.js","component/Table/Sorting.js","component/Table/Pagination.js","pages/TablePage.js","hooks/http.hook.js","App.js","index.js","component/Table/Table.module.css"],"names":["Select","props","selectRef","useRef","useEffect","window","M","FormSelect","init","current","className","ref","name","value","defaultValue","onChange","changeHandler","disabled","placeholder","options","map","option","id","htmlFor","title","Table","tbody","useState","size","setSize","items","filter","setFilter","filteredItem","filterItems","useMemo","item","key","toUpperCase","indexOf","requestFilter","Filter","sortField","setSortField","sortableItems","sort","a","b","direction","requestSort","Sorting","page","setPage","endIndex","hasNextPage","length","paginatedItem","slice","nextPage","prevPage","changeSize","Pagination","filteredName","e","target","type","label","s","select","table","onClick","character","status","species","avatar","src","image","alt","TablePage","request","loading","setLoading","error","setError","useCallback","url","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","useHttp","characters","data2","data3","setTbody","results","concat","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"8PAEaA,EAAS,SAACC,GACrB,IAAMC,EAAYC,mBAMlB,OAJAC,qBAAU,WACRC,OAAOC,EAAEC,WAAWC,KAAKN,EAAUO,WAClC,IAGD,sBAAKC,UAAU,cAAf,UACE,yBACEA,UAAU,QACVC,IAAKT,EACLU,KAAMX,EAAMW,KACZC,MAAOZ,EAAMY,MACbC,aAAc,UACdC,SAAUd,EAAMe,cANlB,UAQE,wBAAQH,MAAM,UAAUI,UAAQ,EAAhC,SAAkChB,EAAMiB,cACtCjB,EAAMkB,QAAQC,KAAI,SAACC,GACnB,OACE,iCACmBA,EAAOR,OAAnBQ,EAAOC,UAKpB,wBAAOC,QAAStB,EAAMW,KAAtB,cAA8BX,EAAMuB,MAApC,W,OCpBOC,EAAQ,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACVC,mBAAS,IADC,mBAC3BC,EAD2B,KACrBC,EADqB,OCNd,SAACC,GAAW,IAAD,EACHH,mBAAS,MADN,mBACxBI,EADwB,KAChBC,EADgB,KAG3BC,EAAe9B,mBAEb+B,EAAcC,mBAAQ,WACX,OAAXJ,IACFE,EAAaxB,QAAUwB,EAAaxB,QAAQsB,QAAO,SAAAK,GACjD,OAE4C,IAFrCA,EAAKL,EAAOM,KAChBC,cACAC,QAAQR,EAAOlB,MAAMyB,qBAG3B,CAACP,IAOJ,MAAO,CAAEE,aAAcA,EAAaxB,QAAUwB,EAAaxB,QAAUqB,EAAOU,cALtD,SAAC3B,EAAOwB,GAC5BJ,EAAaxB,QAAb,YAA2BqB,GAC3BE,EAAU,CAACnB,QAAOwB,SAGuEH,eDZnDO,CAAOf,GAAvCO,EAF0B,EAE1BA,aAAcO,EAFY,EAEZA,cAFY,EENb,SAACV,GAAW,IAAD,EACEH,mBAAS,MADX,mBACzBe,EADyB,KACdC,EADc,KA2BhC,MAAO,CAAEb,MAxBWK,mBAAQ,WAC1B,IAAIS,EAAa,YAAOd,GAYxB,OAXkB,OAAdY,GACFE,EAAcC,MAAK,SAACC,EAAEC,GACpB,OAAID,EAAEJ,EAAUL,KAAOU,EAAEL,EAAUL,KACF,cAAxBK,EAAUM,WAA6B,EAAI,EAEhDF,EAAEJ,EAAUL,KAAOU,EAAEL,EAAUL,KACF,cAAxBK,EAAUM,UAA4B,GAAK,EAE7C,KAGJJ,IACN,CAACd,EAAOY,IAUkBO,YART,SAACZ,GACnB,IAAIW,EAAY,YACZN,GAAaA,EAAUL,MAAQA,GAA+B,cAAxBK,EAAUM,YAClDA,EAAY,cAEdL,EAAa,CAACN,MAAKW,eAGqBN,aFlBZQ,CAAQjB,GAA9BH,EAH0B,EAG1BA,MAAOmB,EAHmB,EAGnBA,YAHmB,EGNV,SAACnB,GAAW,IAAD,EACXH,mBAAS,GADE,mBAC5BwB,EAD4B,KACtBC,EADsB,OAEXzB,mBAAS,CAAC,KAFC,mBAE5BC,EAF4B,KAEtBC,EAFsB,KAQ7BwB,EAAW,WACf,OAAOF,EAAOvB,GAUV0B,EAAcxB,EAAMyB,QAAUF,IAQpC,MAAO,CAAEG,cAFW1B,EAAM2B,OApBhBN,EAAK,GAAKvB,EAoB0ByB,KAEPK,SAhBtB,WACfN,EAAQD,EAAK,IAekCQ,SAZhC,WACfP,EAAQD,EAAK,IAW4CA,OAAMG,cAAaM,WAN3D,SAAC/C,GAClBgB,EAAQhB,KHZmEgD,CAAW/B,GAAhF0B,EAJ0B,EAI1BA,cAAeE,EAJW,EAIXA,SAAUC,EAJC,EAIDA,SAAUR,EAJT,EAISA,KAAMG,EAJf,EAIeA,YAAaM,EAJ5B,EAI4BA,WAOxDE,EAAe,SAACC,GACpBvB,EAAcuB,EAAEC,OAAOnD,MAAOkD,EAAEC,OAAOpD,OA0BzC,OACE,qCACE,uBACEG,SAAU+C,EACVG,KAAK,OACLrD,KAAM,OACNE,aAAc,UACdU,MAAO,qBACPN,YAAe,wEAEjB,cAAC,EAAD,CACEM,MAAO,SACPZ,KAAM,SACNO,QA5BgB,CACpB,CAAEG,GAAI,EAAGT,MAAO,QAASqD,MAAO,SAChC,CAAE5C,GAAI,EAAGT,MAAO,OAAQqD,MAAO,QAC/B,CAAE5C,GAAI,EAAGT,MAAO,UAAWqD,MAAO,YA0B9BlD,cAAiB8C,EACjB5C,YAAe,gBACfR,UAAWyD,IAAEC,SAEf,cAAC,EAAD,CACE5C,MAAO,UACPZ,KAAM,UACNO,QA9BiB,CACrB,CAAEG,GAAI,EAAGT,MAAO,QAASqD,MAAO,SAChC,CAAE5C,GAAI,EAAGT,MAAO,SAAUqD,MAAO,UACjC,CAAE5C,GAAI,EAAGT,MAAO,QAASqD,MAAO,SAChC,CAAE5C,GAAI,EAAGT,MAAO,wBAAyBqD,MAAO,yBAChD,CAAE5C,GAAI,EAAGT,MAAO,gBAAiBqD,MAAO,iBACxC,CAAE5C,GAAI,EAAGT,MAAO,UAAWqD,MAAO,YAyB9BlD,cAAiB8C,EACjB5C,YAAe,iBACfR,UAAWyD,IAAEC,SAEf,wBAAO1D,UAAWyD,IAAEE,MAApB,UACE,gCACE,+BACE,oBAAIC,QAAS,kBAAMrB,EAAY,OAA/B,gBAGA,oBAAIqB,QAAS,kBAAMrB,EAAY,SAA/B,kBAGA,oBAAIqB,QAAS,kBAAMrB,EAAY,WAA/B,oBAGA,oBAAIqB,QAAS,kBAAMrB,EAAY,YAA/B,qBAGA,6CAGJ,gCACEO,EAAcpC,KAAI,SAAAmD,GAClB,OACE,+BACE,6BAAKA,EAAUjD,KACf,6BAAKiD,EAAU3D,OACf,6BAAK2D,EAAUC,SACf,6BAAKD,EAAUE,UACf,6BACE,qBACE/D,UAAWyD,IAAEO,OACbC,IAAKJ,EAAUK,MACfC,IAAKN,EAAU3D,WATZ2D,EAAUjD,YAiBzB,mBACEZ,UAAU,qCACV4D,QAAS,kBAAMX,KACf1C,SAAmB,IAATkC,EAHZ,4CAOA,cAAC,EAAD,CACE3B,MAAO,kFACPZ,KAAM,OACNO,QAjGc,CAClB,CAAEG,GAAI,EAAGT,MAAO,GAAIqD,MAAO,IAC3B,CAAE5C,GAAI,EAAGT,MAAO,GAAIqD,MAAO,IAC3B,CAAE5C,GAAI,EAAGT,MAAO,GAAIqD,MAAO,IAC3B,CAAE5C,GAAI,EAAGT,MAAO,GAAIqD,MAAO,IAC3B,CAAE5C,GAAI,EAAGT,MAAO,GAAIqD,MAAO,KA6FvBrD,MAASe,EACTZ,cA5GmB,SAAA+C,GACvBH,EAAWG,EAAEC,OAAOnD,OACpBgB,EAAQkC,EAAEC,OAAOnD,QA2GbK,YAAe,mIACfR,UAAWyD,IAAEC,SAEf,mBACE1D,UAAU,qCACVO,SAAUqC,EACVgB,QAAS,kBAAMZ,KAHjB,sDI1HOoB,EAAY,WAAO,IACvBC,ECHc,WAAO,IAAD,EACKpD,oBAAS,GADd,mBAClBqD,EADkB,KACTC,EADS,OAECtD,mBAAS,MAFV,mBAElBuD,EAFkB,KAEXC,EAFW,KAgCzB,MAAO,CAAEH,UAASD,QA5BFK,sBAAW,uCAAC,WAAOC,GAAP,mCAAAvC,EAAA,6DAAYwC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,GAC3EP,GAAW,GADa,SAGhBM,IACAA,EAAME,KAAKC,UAAUH,GACrBC,EAAQ,gBAAkB,oBALV,SAQGG,MAAMN,EAAK,CAACC,SAAQC,OAAMC,YAR7B,cAQdI,EARc,iBASDA,EAASC,OATR,WASdC,EATc,OAWfF,EAASG,GAXM,uBAYV,IAAIC,MAAMF,EAAKG,SAAW,kGAZhB,eAepBhB,GAAW,GAfS,kBAiBba,GAjBa,wCAmBpBb,GAAW,GACXE,EAAS,KAAEc,SApBS,+DAAD,sDAuBxB,IAKwBf,QAAOgB,WAFfd,uBAAY,kBAAMD,EAAS,QAAO,KD3BrCgB,GAAXpB,QAEDqB,EAAU,uCAAG,gCAAAtD,EAAA,+EAEIiC,EAAQ,oDAAoD,MAAO,MAFvE,cAETe,EAFS,gBAGKf,EAAQ,oDAAoD,MAAO,MAHxE,cAGTsB,EAHS,gBAIKtB,EAAQ,oDAAoD,MAAO,MAJxE,OAITuB,EAJS,OAKfC,EAAST,EAAKU,QAAQC,OAAOJ,EAAMG,QAASF,EAAME,UALnC,4GAAH,qDAHa,EAWH7E,mBAAS,IAXN,mBAWtBD,EAXsB,KAWf6E,EAXe,KAiB7B,OAJAnG,qBAAU,WACRgG,MACC,IAGD,qBAAK1F,UAAU,MAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,cAAC,EAAD,CAAOgB,MAAQA,SEZRgF,MARf,WACE,OACE,qBAAKhG,UAAU,MAAf,SACE,cAAC,EAAD,OCFNiG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,OAAS,sBAAsB,OAAS,sBAAsB,MAAQ,wB","file":"static/js/main.f9bc2369.chunk.js","sourcesContent":["import React, {useEffect, useRef} from 'react';\r\n\r\nexport const Select = (props) => {\r\n  const selectRef = useRef();\r\n\r\n  useEffect(() => {\r\n    window.M.FormSelect.init(selectRef.current);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"input-field\">\r\n      <select\r\n        className=\"icons\"\r\n        ref={selectRef}\r\n        name={props.name}\r\n        value={props.value}\r\n        defaultValue={'DEFAULT'}\r\n        onChange={props.changeHandler}\r\n      >\r\n        <option value=\"DEFAULT\" disabled>{props.placeholder}</option>\r\n        { props.options.map((option) => {\r\n          return (\r\n            <option\r\n              key={option.id}>{option.value}\r\n            </option>\r\n          )\r\n        }) }\r\n      </select>\r\n      <label htmlFor={props.name}> {props.title} </label>\r\n    </div>\r\n  )\r\n};","import React, { useState } from 'react';\r\nimport s from './Table.module.css';\r\nimport { Select } from '../Select';\r\n\r\nimport { Sorting } from './Sorting';\r\nimport { Pagination } from './Pagination';\r\nimport { Filter } from './Filter';\r\n\r\nexport const Table = ({ tbody }) => {\r\n  const [size, setSize] = useState(10);\r\n  const { filteredItem, requestFilter } = Filter(tbody)\r\n  const { items, requestSort} = Sorting(filteredItem);\r\n  const { paginatedItem, nextPage, prevPage, page, hasNextPage, changeSize } = Pagination(items);\r\n\r\n  const handleChangeSize = e => {\r\n    changeSize(e.target.value);\r\n    setSize(e.target.value);\r\n  }\r\n\r\n  const filteredName = (e) => {\r\n    requestFilter(e.target.value, e.target.name);\r\n  }\r\n\r\n  const sizeOptions = [\r\n    { id: 1, value: 10, label: 10 },\r\n    { id: 2, value: 20, label: 20 },\r\n    { id: 3, value: 30, label: 30 },\r\n    { id: 4, value: 40, label: 40 },\r\n    { id: 5, value: 50, label: 50 }\r\n  ];\r\n\r\n  const statusOptions = [\r\n    { id: 1, value: 'alive', label: 'Alive' },\r\n    { id: 2, value: 'dead', label: 'Dead' },\r\n    { id: 3, value: 'unknown', label: 'unknown' }\r\n  ];\r\n\r\n  const speciedOptions = [\r\n    { id: 1, value: 'alien', label: 'Alien' },\r\n    { id: 2, value: 'animal', label: 'Animal' },\r\n    { id: 3, value: 'human', label: 'Human' },\r\n    { id: 4, value: 'mythological creature', label: 'Mythological Creature' },\r\n    { id: 5, value: 'poopybutthole', label: 'Poopybutthole' },\r\n    { id: 6, value: 'unknown', label: 'unknown' }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        onChange={filteredName}\r\n        type=\"text\"\r\n        name={'name'}\r\n        defaultValue={'DEFAULT'}\r\n        title={'Имя'}\r\n        placeholder = {'Напишите имя'}\r\n      />\r\n      <Select\r\n        title={'Status'}\r\n        name={'status'}\r\n        options={statusOptions}\r\n        changeHandler = {filteredName}\r\n        placeholder = {'Select status'}\r\n        className={s.select}\r\n      />\r\n      <Select\r\n        title={'Species'}\r\n        name={'species'}\r\n        options = {speciedOptions}\r\n        changeHandler = {filteredName}\r\n        placeholder = {'Select species'}\r\n        className={s.select}\r\n      />\r\n      <table className={s.table}>\r\n        <thead>\r\n          <tr>\r\n            <th onClick={() => requestSort('id')} >\r\n              id\r\n            </th>\r\n            <th onClick={() => requestSort('name')}>\r\n              Name\r\n            </th>\r\n            <th onClick={() => requestSort('status')}>\r\n              Status\r\n            </th>\r\n            <th onClick={() => requestSort('species')}>\r\n              Species\r\n            </th>\r\n            <th>Avatar</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        { paginatedItem.map(character => {\r\n          return (\r\n            <tr key={character.id}>\r\n              <td>{character.id}</td>\r\n              <td>{character.name}</td>\r\n              <td>{character.status}</td>\r\n              <td>{character.species}</td>\r\n              <td>\r\n                <img\r\n                  className={s.avatar}\r\n                  src={character.image}\r\n                  alt={character.name}\r\n                />\r\n              </td>\r\n            </tr>\r\n          )})\r\n        }\r\n        </tbody>\r\n      </table>\r\n      <a\r\n        className=\"waves-effect waves-light btn-small\"\r\n        onClick={() => prevPage()}\r\n        disabled={page === 1}\r\n      >\r\n        Назад\r\n      </a>\r\n      <Select\r\n        title={'Размер таблицы'}\r\n        name={'size'}\r\n        options = {sizeOptions}\r\n        value = {size}\r\n        changeHandler = {handleChangeSize}\r\n        placeholder = {'Выберите размер таблицы'}\r\n        className={s.select}\r\n      />\r\n      <a\r\n        className=\"waves-effect waves-light btn-small\"\r\n        disabled={hasNextPage}\r\n        onClick={() => nextPage()}\r\n      >\r\n        Вперёд\r\n      </a>\r\n    </>\r\n  )\r\n}","import { useMemo, useRef, useState} from \"react\";\r\n\r\nexport const Filter = (items) => {\r\n  const [filter, setFilter] = useState(null);\r\n\r\n  let filteredItem = useRef();\r\n\r\n  const filterItems = useMemo(() => {\r\n    if (filter !== null) {\r\n      filteredItem.current = filteredItem.current.filter(item => {\r\n        return item[filter.key]\r\n          .toUpperCase()\r\n          .indexOf(filter.value.toUpperCase()) !== -1\r\n      });\r\n    }\r\n  }, [filter])\r\n\r\n  const requestFilter = (value, key) => {\r\n    filteredItem.current = [...items];\r\n    setFilter({value, key})\r\n  }\r\n\r\n  return { filteredItem: filteredItem.current ? filteredItem.current : items, requestFilter, filterItems }\r\n}","import {useMemo, useState} from \"react\";\r\n\r\nexport const Sorting = (items) => {\r\n  const [sortField, setSortField] = useState(null);\r\n\r\n  const sortedItems = useMemo(() => {\r\n    let sortableItems = [...items];\r\n    if (sortField !== null) {\r\n      sortableItems.sort((a,b) => {\r\n        if (a[sortField.key] < b[sortField.key]) {\r\n          return sortField.direction === 'ascending' ? -1 : 1;\r\n        }\r\n        if (a[sortField.key] > b[sortField.key]) {\r\n          return sortField.direction === 'ascending' ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n    return sortableItems;\r\n  }, [items, sortField]);\r\n\r\n  const requestSort = (key) => {\r\n    let direction = 'ascending';\r\n    if (sortField && sortField.key === key && sortField.direction === 'ascending') {\r\n      direction = 'descending';\r\n    }\r\n    setSortField({key, direction});\r\n  }\r\n\r\n  return { items: sortedItems, requestSort, sortField }\r\n}","import { useState } from \"react\";\r\n\r\nexport const Pagination = (items) => {\r\n  const [page, setPage] = useState(1);\r\n  const [size, setSize] = useState([10]);\r\n\r\n  const startIndex = () => {\r\n    return (page-1) * size\r\n  }\r\n\r\n  const endIndex = () => {\r\n    return page * size\r\n  }\r\n  const nextPage = () => {\r\n    setPage(page+1);\r\n  }\r\n\r\n  const prevPage = () => {\r\n    setPage(page-1);\r\n  }\r\n\r\n  const hasNextPage = items.length <= endIndex();\r\n\r\n  const changeSize = (value) => {\r\n    setSize(value);\r\n  }\r\n\r\n  let paginatedItem = items.slice(startIndex(), endIndex());\r\n\r\n  return { paginatedItem: paginatedItem, nextPage, prevPage, page, hasNextPage, changeSize }\r\n}","import {useState, useEffect} from 'react'\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport { Table } from '../component/Table/Table'\r\n\r\nexport const TablePage = () => {\r\n  const {request} = useHttp();\r\n\r\n  const characters = async() => {\r\n    try {\r\n      const data = await request('https://rickandmortyapi.com/api/character/?page=1','GET', null);\r\n      const data2 = await request('https://rickandmortyapi.com/api/character/?page=2','GET', null);\r\n      const data3 = await request('https://rickandmortyapi.com/api/character/?page=3','GET', null);\r\n      setTbody(data.results.concat(data2.results, data3.results));\r\n    } catch (e) {}\r\n  }\r\n  const [tbody, setTbody] = useState([]);\r\n\r\n  useEffect(() => {\r\n    characters()\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s6 offset-s3\">\r\n        <Table tbody={ tbody }/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {useCallback, useState} from 'react'\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n        try {\r\n            if (body) {\r\n                body =JSON.stringify(body)\r\n                headers['Content-Type'] = 'application/json'\r\n            };\r\n\r\n            const response = await fetch(url, {method, body, headers});\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Что-то пошло не так')\r\n            }\r\n\r\n            setLoading(false)\r\n\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    }, []);\r\n\r\n    //const clearError = () => setError(null) - первоначальный вариант\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return { loading, request, error, clearError };\r\n}","import './App.css';\nimport 'materialize-css'\nimport { TablePage } from './pages/TablePage'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TablePage/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Table_avatar__bLXuu\",\"select\":\"Table_select__11GNO\",\"table\":\"Table_table__3iswx\"};"],"sourceRoot":""}